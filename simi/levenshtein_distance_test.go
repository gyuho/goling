package simi

import "testing"

func Test_LevenshteinDistance(t *testing.T) {
	// the bigger the return value is,
	// the more similar the two texts are.

	// insertion
	if LevenshteinDistance("Hello", "Hellok") != 1 {
		t.Errorf("'Hello', 'Hellok' = %v", LevenshteinDistance("Hello", "Hellok"))
	}

	// deletion
	if LevenshteinDistance("Hellok", "Hello") != 1 {
		t.Errorf("'Hellok', 'Hello' = %v", LevenshteinDistance("Hellok", "Hello"))
	}

	// substituition
	if LevenshteinDistance("Hellok", "Helloa") != 1 {
		t.Errorf("'Hellok', 'Helloa' = %v", LevenshteinDistance("Hellok", "Helloa"))
	}

	// very similar texts
	text1 := "This is a foo bar sentence."
	text2 := "This sentence is similar to a foo bar sentence."
	if LevenshteinDistance(text1, text2) != 20 {
		t.Errorf("text1, text2 = %v", LevenshteinDistance(text1, text2))
	}

	// very different texts
	text3 := "AppendFloat appends the string form of the floating-point number f, as generated by FormatFloat, to dst and returns the extended buffer."
	text4 := "There are very simple ways to use matlab in parallel, with GPU, multi-thread support."
	if LevenshteinDistance(text3, text4) != 98 {
		t.Errorf("text3, text4 = %v", LevenshteinDistance(text3, text4))
	}

	// less different texts
	text5 := "How is the product team at SEOmoz structured?"
	text6 := "Moz: How trustworthy is SEOMoz after what they did to DOZ?"
	if LevenshteinDistance(text5, text6) != 40 {
		t.Errorf("text5, text6 = %v", LevenshteinDistance(text5, text6))
	}

	// same texts
	text7 := "I am a gopher."
	text8 := "I am a gopher."
	if LevenshteinDistance(text7, text8) != 0.0001 {
		t.Errorf("text7, text8 = %v", LevenshteinDistance(text7, text8))
	}

	// totally different text
	text9 := "I am a gopher."
	text0 := ""
	if LevenshteinDistance(text9, text0) != 14 {
		t.Errorf("'I am a gopher', '' = %v", LevenshteinDistance(text9, text0))
	}

	if LevenshteinDistance("intention", "execution") != 5 {
		t.Errorf("'intention', 'execution' = %v", LevenshteinDistance("intention", "execution"))
	}

	if LevenshteinDistance("i n t e n t i o n", "e x e c u t i o n") != 5 {
		t.Errorf("'i n t e n t i o n', 'e x e c u t i o n' = %v", LevenshteinDistance("i n t e n t i o n", "e x e c u t i o n"))
	}

	if LevenshteinDistance("AGGCTATCACCTGACCTCCAGGCCGATGCC", "TAGCTATCACGACCGCGGTCGATTTGCCCGAC") != 14 {
		t.Errorf("DNA = %v", LevenshteinDistance("AGGCTATCACCTGACCTCCAGGCCGATGCC", "TAGCTATCACGACCGCGGTCGATTTGCCCGAC"))
	}

	if LevenshteinDistance("like", "lllikee") != 3 {
		t.Errorf("'like', 'lllikee' = %v", LevenshteinDistance("like", "lllikee"))
	}

	if LevenshteinDistance("look at", "google") != 5 {
		t.Errorf("'look at' , 'google' = %v", LevenshteinDistance("look at", "google"))
	}

	if LevenshteinDistance("l", "g") != 1 {
		t.Errorf("'l' , 'g' = %v", LevenshteinDistance("l", "g"))
	}

	if LevenshteinDistance("love it", "go to the beach") != 12 {
		t.Errorf("love it", "go to the beach = %v", LevenshteinDistance("love it", "go to the beach"))
	}

	if LevenshteinDistance("Spokesman confirms senior government adviser was shot.", "Spokesman said the senior adviser was shot dead.") != 24 {
		t.Errorf("Spokesman... %v", LevenshteinDistance("Spokesman confirms senior government adviser was shot.", "Spokesman said the senior adviser was shot dead."))
	}
}
